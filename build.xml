<project name="dreme" default="test" basedir=".">
    <description>
        Dreme scheme environment
    </description>

    <!-- set global properties for this build -->
    <property name="src" location="src"/>
    <property name="tests" location="test"/>
    <property name="build" location="build"/>
        <property name="classes" location="${build}/classes"/>
        <property name="test-classes" location="${build}/test-classes"/>
        <property name="test-results" location="${build}/test-results"/>
    <property name="lib" location="lib"/>
        <property name="lib.compile" location="${lib}/compile"/>
        <property name="lib.test" location="${lib}/test"/>
    <property name="dist" location="dist"/>

    <patternset id="resources-pattern">
        <include name="**/*.scm"/>
        <include name="**/*.properties"/>
        <exclude name="**/*.java"/>
    </patternset>

    <target name="init">
        <!-- Create the time stamp -->
        <tstamp/>
        <!-- Create the build directory structure used by compile -->
        <mkdir dir="${build}"/>
    </target>

    <target name="compile" depends="init" description="compile the source">
        <mkdir dir="${classes}"/>
        <javac srcdir="${src}" destdir="${classes}">
            <classpath>
                <fileset dir="${lib.compile}" includes="*.jar"/>
            </classpath>
        </javac>
        <copy todir="${classes}">
            <fileset dir="${src}">
                <patternset refid="resources-pattern"/>
            </fileset>
        </copy>
    </target>

    <target name="clean" description="clean up">
        <!-- Delete the ${build} and ${dist} directory trees -->
        <delete dir="${build}"/>
        <delete dir="${dist}"/>
    </target>

    <target name="test-compile" depends="compile">
        <mkdir dir="${test-classes}"/>
        <javac srcdir="${tests}" destdir="${test-classes}">
            <classpath>
                <pathelement path="${classes}"/>
                <fileset dir="${lib.compile}" includes="*.jar"/>
                <fileset dir="${lib.test}" includes="*.jar"/>
            </classpath>
        </javac>
        <copy todir="${test-classes}">
            <fileset dir="${tests}">
                <patternset refid="resources-pattern"/>
            </fileset>
        </copy>
    </target>

    <target name="test" depends="test-compile">
        <mkdir dir="${test-results}"/>
        <junit printsummary="yes" haltonfailure="yes" showoutput="yes" >
            <classpath>
                <pathelement path="${classes}"/>
                <pathelement path="${test-classes}"/>
                <fileset dir="${lib.compile}" includes="*.jar"/>
                <fileset dir="${lib.test}" includes="*.jar"/>
            </classpath>

            <formatter type="plain"/>

            <batchtest fork="yes" todir="${test-results}">
                <formatter type="plain"/>
                <fileset dir="${tests}">
                    <include name="**/*Test*.java"/>
                    <exclude name="**/AllTests.java"/>
                </fileset>
            </batchtest>
        </junit>
    </target>

    <target name="dist" depends="test" description="generate the distribution">
        <!-- Create the distribution directory -->
        <mkdir dir="${dist}"/>

        <!-- Put everything in ${build} into the MyProject-${DSTAMP}.jar file -->
        <jar jarfile="${dist}/${ant.project.name}-${DSTAMP}.jar" basedir="${build}"/>
    </target>
</project>

